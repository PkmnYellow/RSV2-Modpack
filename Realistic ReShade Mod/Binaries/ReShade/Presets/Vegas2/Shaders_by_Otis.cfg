
////---------------//
///**GOLDENRATIO**///
//---------------////
#define USE_GOLDENRATIO 0 //[GoldenRatio] //-Golden Ratio : This simple effect renders 4 golden ratio spirals (fibonacci) on the screen to make it easier to take perfect screenshots by making it easier to perfect the composition. Requires the game to have an active depth buffer.

//>GOLDEN RATIO Settings<\\
#define GOR_Opacity 0.30 //[0.00:1.00] //-Opacity of overlay. 0 is invisible, 1 is opaque lines.
#define GOR_ResizeMode 1 //[0:1] //-Resize mode: 0 is clamp to screen (so resizing of overlay, no golden ratio by definition), 1: resize to either full with or full height while keeping aspect ratio: golden ratio by definition in lined area.
#define GOR_ToggleKey RESHADE_TOGGLE_KEY //[undef] //-Key to toggle the overlay on or off.


////-------------//
///**DEPTHHAZE**///
//-------------////
#define USE_DEPTHHAZE 0 //[DepthHaze] //-This simple effect slightly blurs and fogs the far away scenery based on the depth buffer. It's a small, detuned depth of field with only a far plane combined with optionally fog injection. The effect is not a lens effect but an effect mimicing the blurryness/hazyness of far away objects caused by haze and the lack of the human eye to see far away detail. Modern render engines often render far away scenery with a crisp pixel detail causing it to look 'off'. This effect tries to mitigate that. Requires the game to have an active depth buffer.

//>DEPTH HAZE Settings<\\
#define DEH_EffectStrength 0.6 //[0.0:1.0] //-The strength of the effect. Range from 0.0, which means no effect, till 1.0 which means pixels are 100% blurred based on depth.
#define DEH_FogColor float3(1.0,0.8,0.2) //[0.0:1.0] //-Color of the fog (r, g, b). 
#define DEH_FogStart 0.3 //[0.0:1.0] //-Start of the fog. 0.0 is at the camera, 1.0 is at the horizon, 0.5 is halfway towards the horizon. Before this point no fog will appear
#define DEH_FogFactor 0.6 //[0.0:1.0] //-The amount of fog added to the scene. 0.0 is no fog, 1.0 is the strongest fog possible
#define DEH_ToggleKey RESHADE_TOGGLE_KEY //[undef] //-Key to toggle the effect on or off


////-------------//
///**EMPHASIZE**///
//-------------////
#define USE_EMPHASIZE 0 //[Emphasize] //-It is an effect which is meant to de-emphasize elements which are not in focus, so instead of blurring them like a DoF shader would do, they're either greyed out or blended with a blend color to e.g. make them darker. Using this effect can make the in-focus elements stand out. Requires the game to have an active depth buffer. If your game uses a logarithmic depth buffer, you have to switch on RFX_LogDepth in common.cfg.

//>EMPHASIZE Settings<\\
#define EMZ_ManualFocusDepth 0.026 //[0.000:1.000] //-Manual focus depth of the point which has the focus. Range from 0.0, which means camera is the focus plane, till 1.0 which means the horizon is focus plane. 
#define EMZ_FocusRangeDepth 0.01 //[0.00:1.00] //-The depth of the range around the manual focus depth which should be emphasized. Outside this range, de-emphasizing takes place
#define EMZ_FocusEdgeDepth 0.05 //[0.00:1.00] //-The depth of the edge of the focus range. Range from 0.00, which means no depth, so at the edge of the focus range, the effect kicks in at full force, till 1.00, which means the effect is smoothly applied over the range focusRangeEdge-horizon.
#define EMZ_BlendColor float3(0.0,0.0,0.0) //[0.0:1.0] //-Specifies the blend color to blend with the greyscale. in (Red, Green, Blue). Use dark colors to darken further away objects
#define EMZ_BlendFactor 0.0 //[0.0:1.0] //-Specifies the factor EMZ_BlendColor is blended. Range from 0.0, which means full greyscale, till 1.0 which means full blend of the EMZ_BlendColor 
#define EMZ_EffectFactor 0.9 //[0.0:1.0] //-Specifies the factor the desaturation is applied. Range from 0.0, which means the effect is off (normal image), till 1.0 which means the desaturated parts are full greyscale (or color blending if that's enabled)
#define EMZ_ToggleKey RESHADE_TOGGLE_KEY //[undef] //-Key to toggle the effect on or off


////----------------//
///**MOUSEOVERLAY**///
//----------------////
#define USE_MOUSEOVERLAY 0 //[MouseOverlay] //-Simple effect that shows the mouse coordinates on the screen using a small block

//>MOUSEVERLAY Settings<\\
#define MOL_ToggleKey VK_PAUSE //[undef] //-
#define MOL_CursorSize 3 //[1:100] //-The x and y size of the element displayed at the location of the mouse coordinates, in pixels 
#define MOL_CursorColor float3(1.0,0.0,0.0) //[0.0:1.0] //-Specifies the color of the element displayed at the location of the mouse coordinates. (r, g, b)

